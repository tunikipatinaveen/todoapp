{"version":3,"sources":["Todo.jsx","TodoList.jsx","App.js","index.js"],"names":["Todo","data","index","deleteMe","className","title","message","onClick","id","todoId","fetch","method","headers","then","response","json","console","log","catch","err","TodoList","todos","refreshTodos","pageNum","changePageNum","deleteTodo","splice","MyTodoList","map","App","useState","setTodos","loading","setloading","setpageNum","settitle","setmessage","useEffect","res","value","onChange","e","target","type","placeholder","opts","body","JSON","stringify","addTodo","num","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72566885.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({ data, index, deleteMe }) {\n    const deleteTodo = (id, todoId) => {\n        const deleteMethod = {\n            method: 'DELETE', // Method itself\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8' // Indicates the content \n            },\n            // No need to have body, because we don't send nothing to the server.\n        }\n        // Make the HTTP Delete call using fetch api\n        fetch(`https://60d2c4ae858b410017b2e2e2.mockapi.io/todos/${todoId}`, deleteMethod)\n            .then(response => response.json())\n            .then(data => console.log(data)) // Manipulate the data retrieved back, if we want to do something with it\n            .catch(err => console.log(err))\n        deleteMe(id)\n    }\n    return (\n        <div className=\"flex w-full justify-between mt-2 border-b border-gray-200 \">\n            <div>{index + 1}</div>\n            <div>{data.title}</div>\n            <div>{data.message}</div>\n            <div onClick={() => deleteTodo(index, data.id)} className=\"cursor-pointer py-2 px-2 bg-red-500 text-white rounded\">Delete</div>\n        </div>\n    )\n}\n","import React from 'react'\nimport Todo from './Todo'\n\n\nexport default function TodoList({ todos, refreshTodos, pageNum, changePageNum }) {\n    const deleteTodo = (index) => {\n        todos.splice(index, 1)\n        refreshTodos(todos)\n    }\n\n    const MyTodoList = todos.map((data, index) => {\n        return <Todo deleteMe={deleteTodo} index={index} key={data.id} data={data} />\n    })\n    return (\n        <div>\n            {MyTodoList}\n            {/*  pagination */}\n            <div className=\"mt-5 flex items-center justify-center w-full\">\n                <button className=\"font-semibold py-3 px-4 text-xs bg-gray-200\" onClick={() => changePageNum(pageNum - 1)}>previous</button>\n                <span className=\"px-3\">{pageNum}</span>\n                <button className=\"font-semibold py-3 px-4 text-xs bg-gray-200\" onClick={() => changePageNum(pageNum + 1)}>Next</button>\n            </div>\n        </div>\n    )\n}\n","import TodoList from \"./TodoList\";\nimport { useState, useEffect } from 'react'\n\n\nfunction App() {\n\n  //Store Todos from server\n  const [todos, setTodos] = useState([])\n\n  //Loading Indicator\n  const [loading, setloading] = useState(false)\n\n  //Page Number\n  const [pageNum, setpageNum] = useState(1)\n  const limitpageNum = 10\n\n  //Form Data \n  const [title, settitle] = useState('')\n  const [message, setmessage] = useState('')\n\n  const refreshTodos = (todos) => {\n    setTodos([...todos])\n  }\n\n  const changePageNum = (num) => {\n    if (num === 0) {\n      return\n    }\n    setpageNum(num)\n  }\n\n  const addTodo = () => {\n    const opts = {\n      title,\n      message\n    }\n    fetch('https://60d2c4ae858b410017b2e2e2.mockapi.io/todos', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(opts)\n    }).then((res) => {\n      return res.json()\n    }).then(data => {\n      console.log(\"added todo:\", data)\n      setmessage('')\n      settitle('')\n      setTodos([data, ...todos])\n    })\n  }\n\n  useEffect(() => {\n    setloading(true)\n    fetch(`https://60d2c4ae858b410017b2e2e2.mockapi.io/todos/?page=${pageNum}&limit=${limitpageNum}`).then((res) => {\n      return res.json()\n    }).then(data => {\n      setloading(false)\n      setTodos(data)\n    })\n\n  }, [pageNum])\n\n  return (\n    <div className=\"container mx-auto bg-gray-100 h-screen p-7\">\n      {/*  top Box With Input Forms  */}\n      <h1 className=\"text-center text-3xl my-2\">Todos web App</h1>\n      <section className=\"pt-5 flex w-full justify-center\">\n        <input value={title} onChange={(e) => settitle(e.target.value)} className=\"px-2 focus:outline-none border border-gray-200 py-2\" type=\"text\" placeholder=\"Add To Do\" />\n        <input value={message} onChange={(e) => setmessage(e.target.value)} className=\"px-2 focus:outline-none border border-gray-200 py-2 mx-2\" type=\"text\" placeholder=\"Message\" />\n        <button onClick={() => addTodo()} className=\"ml-2 bg-blue-500 py-1 px-2 focus:outline-none text-white rounded\">Add Todo</button>\n      </section>\n      {/*  Data Form  */}\n      <div className=\"p-8 mt-3\">\n        {loading ? 'loading....' : <TodoList pageNum={pageNum} changePageNum={changePageNum} refreshTodos={refreshTodos} todos={todos} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}